<?php
namespace Tests;

use App\Exceptions\Handler;
use Illuminate\Contracts\Debug\ExceptionHandler;
use Illuminate\Foundation\Testing\TestCase as BaseTestCase;

abstract class TestCase extends BaseTestCase
{
    use CreatesApplication;
    
    private $oldExceptionHandler;
    
    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->disableExceptionHandling();
        
    }
    
    function create($class,$attributes = [])
    {
        return factory($class)->create($attributes);
    }

    function make($class,$attributes = [])
    {
        return factory($class)->make($attributes);
    }
    
    function raw($class,$attributes = [])
    {
        return factory($class)->raw($attributes);
    }

    protected function signIn($user = null)
    {
        $user = $user ?: $this->create('App\User');

        $this->actingAs($user);

        return $this;
    }
    
    protected function disableExceptionHandling()
    {
        $this->oldExceptionHandler = $this->app->make(ExceptionHandler::class);
        
        $this->app->instance(ExceptionHandler::class,new class extends Handler{
            public function __construct(){}
            public function report(\Exception $e){}
            public function render($request,\Exception $e){
                throw $e;
            }
        });
    }
    
    protected function withExceptionHandling()
    {
        $this->app->instance(ExceptionHandler::class,$this->oldExceptionHandler);
        return $this;
        
    }
}
