<?php

namespace Tests\Unit;

use App\Channel;
use App\Thread;
use App\User;
use Tests\TestCase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Foundation\Testing\RefreshDatabase;

class ThreadTest extends TestCase
{
    private $thread;
    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->thread=factory(Thread::class)->create();
    }
    
    /**
     * @test
     * @return void
     */
    public function a_thread_has_a_user()
    {
        $this->assertInstanceOf(User::class,$this->thread->creator);
    }
    
    /**
     * @test
     */
    public function a_thread_add_replies()
    {
        $this->thread->addReply([
            'body'=>'test',
            'user_id'=>1
        ]);
        $this->assertCount(1,$this->thread->replies);
    }
    
    /**
     * @test
     */
    public function a_thread_belongs_to_a_channel()
    {
        $thread=$this->create(Thread::class);
        $this->assertInstanceOf(Channel::class,$thread->channel);
    }
    
    /**
     * @test
     */
    public function a_thread_can_make_a_string_path()
    {
        $thread=$this->create(Thread::class);
        $this->assertEquals(
            '/threads/'.$thread->channel->slug.'/'.$thread->id,
            $thread->path()
        );
    }
}
